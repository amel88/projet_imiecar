imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@ImiecarBundle/Resources/config/services.yml" }
    - { resource: "@UserBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr

framework:
    esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.root_dir%/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale: '%locale%'
    trusted_hosts: ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    cache: false


# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_mysql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/../var/data/data.sqlite"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: UserBundle\Entity\User
    from_email:
        address: christopher.jacquot@gmail.com
        sender_name: EmieCar
    registration:
        form:
            type: UserBundle\Form\RegistrationType
        confirmation:
            enabled: true
    resetting:
        email:
            from_email:
                address:        christopher.jacquot@gmail.com
                sender_name:    Demo Resetting

#fos_rest:
#    format_listener:
#        enabled: true
#        rules:
#            # ... previous rules declarations
#            - { path: '^/admin', stop: true }  # <-- add this line

easy_admin:
    site_name: 'ACME <em style="font-size: 80%;">EmieCar.</em>'
    design:
        brand_color: 'rgba(160, 0, 0, 0.85)'
#        color_scheme: 'light'
    entities:
        Campus:
            class: ImiecarBundle\Entity\Campus
            label: 'Campus'
            list:
                tile: "liste des campus"
        Ville:
            class: ImiecarBundle\Entity\Ville
            label: 'Villes'
            list:
            tile: "liste des villes"

        Trajet:
            class: ImiecarBundle\Entity\Trajet
            label: 'Trajets'
            list:
            tile: "liste des trajets"

        Commentaires:
            class: ImiecarBundle\Entity\Commentaires
            label: 'Commentaires'
            list:
            tile: "liste des commentaires"

        Contact:
            class: ImiecarBundle\Entity\Contact
            label: 'Contact'
            list:
            tile: "liste des messages"

        User:
            class: UserBundle\Entity\User
            label: 'Utilisateurs'
            form:
                fields:
                    - username
                    - email
                    - enabled
                    - lastLogin
                    # if administrators are allowed to edit users' passwords and roles, add this:
                    - { property: 'plainPassword', type: 'text', type_options: { required: false } }
                    - { property: 'roles', type: 'choice', type_options: { multiple: true, choices: { 'ROLE_USER': 'ROLE_USER', 'ROLE_ADMIN': 'ROLE_ADMIN' } } }

